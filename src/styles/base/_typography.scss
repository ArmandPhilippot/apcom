@use "../abstracts/functions" as fun;

p {
  font-size: var(--font-size-md);
  margin: 0 0 var(--spacing-sm);
}

small {
  font-size: var(--font-size-sm);
}

ol {
  list-style-type: none;
  counter-reset: li;
  padding: 0;

  > li {
    display: table;
    counter-increment: li;

    &::before {
      content: counters(li, ".") ". ";
      color: var(--color-secondary);
      display: table-cell;
      padding-right: var(--spacing-2xs);
    }
  }

  li ol > li::before {
    content: counters(li, ".") ". ";
  }
}

ul,
ol {
  li {
    margin-bottom: var(--spacing-2xs);

    &:last-child {
      margin-bottom: 0;
    }
  }

  ::marker {
    color: var(--color-primary-dark);
  }
}

ul {
  padding-left: var(--spacing-sm);
}

dl {
  display: flex;
  flex-flow: row wrap;
  gap: var(--spacing-2xs);
}

ul,
ol,
dl {
  margin: var(--spacing-sm) 0;

  & & {
    margin: var(--spacing-2xs) 0 0;
  }

  ::marker {
    color: var(--color-primary-dark);
  }
}

a {
  background: linear-gradient(to top, var(--color-primary) 50%, transparent 50%)
    0 0 / 100% 201% no-repeat;
  color: var(--color-primary);
  text-decoration-thickness: 0.15em;
  text-underline-offset: 20%;
  transition:
    all 0.3s linear 0s,
    text-decoration 0.18s ease-in-out 0s;

  &:hover {
    color: var(--color-primary-light);
    text-decoration-thickness: 0.25em;
  }

  &:focus {
    background-position: 0 100%;
    color: var(--color-fg-inverted);
  }

  &:active {
    background-position: 0 0;
    color: var(--color-primary-dark);
    text-decoration-thickness: 18%;
  }
}

button,
input,
optgroup,
select,
textarea {
  line-height: var(--line-height);
}

code,
kbd,
pre,
var {
  font-family: var(--font-family-mono);
}

:not(pre) > code,
kbd,
var,
samp {
  background: var(--color-bg-code);
  border: fun.convert-px(1) solid var(--color-border);
  border-radius: fun.convert-px(3);
  color: var(--color-primary-darker);
  font-style: normal;
  padding: fun.convert-px(2) fun.convert-px(5) fun.convert-px(1)
    fun.convert-px(5);
}

kbd {
  box-shadow: fun.convert-px(1) fun.convert-px(1) 0 fun.convert-px(1)
    var(--color-shadow);
}

pre {
  display: block;
  max-width: 100%;
  overflow: auto;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
}
